File:    README
Author:  Joseph Rude
Program: prog6
Date:    3/20/18

BUILDING THE PROGRAM
   This program was written in C++ and distributed to be built on a 
   Linux system.  To build the program, type 'make' to create the 
   executable called 'prog6'

RUNNING THE PROGRAM
   Type 'prog6' at the command prompt after building the program.
   
   Please keep in mind:
      It is assumed your maximum test score will be a positive number.
      You should be entering the maximum score and 
	    at least 1 name/score pair into your data file for input.
      The maximum test score must be int.
      The data of test scores must be int.
      The data of names must be string.
      The read function will stop reading after 30 values (maximum array size)

PROGRAM DESCRIPTION
   This program will read input from the data file "testscores", sort them in descending order, output each score(with the name, score value, percentage, 
   and grade) to the file "testresults", and will finally output a summary of
   various data relating to all the scores to the file "testsummary".

PROGRAM INPUT
   All input comes from the file "testscores". The program will required a
   specific format for the data. Each piece of data is on a separate line. the
   data file must also contain an empty line at the end of the file if you are
   using the Kate editor. The data file begins with the maximum test score,
   followed by a Name and the Score of that person.
   
   Example of testscores:
      400 
      Tad Pohl
      348
      Bud Weiser
      9
      Rose Bush
      325
      Earl E Riser
      287
      Polly Ester
      400
      
      The first 400 is the maximum test score. The following values are the
      name and score pairs.
   
PROGRAM OUTPUT
   The first output will be printed to the file "testresults". The output 
   will be the scores formatted with the name, score number, percentage, and 
   letter grade. 
   
   A second output will contain various data relating to all of the scores.
   This will be printed to the file "testsummary"
   
   Example with the "testscores" file from above:
   
    - "testresults" file contains:
	    Name                        Score	PCT	 Grade
      --------------------------  -----     ------     -----
      Polly Ester                  400     100.00%       A
      Tad Pohl                     348      87.00%       B
      Rose Bush                    325      81.25%       B
      Earl E Riser                 287      71.75%       C
      Bud Weiser                   9         2.25%       F
      
     - "testsummary" file contains:
	  -----Summary-----
      Maximum Score: 400
      Number of Students: 5
      High Score: 400
      Low Score: 9
      Range of Scores: 391
      Average of Scores: 273.8
      Median Score: 325
      Standard Deviation: -nan
     


PROGRAM DESIGN
   This program stores all the names and ints in parallel arrays.

   The general algorithm
      input comes from the file "testscores"
      read the names into an array
      read the ints into an array
      sort the parallel arrays
      output the array along with the percentage and letter grade achieved
      output the summary of the data in the array

   Function input and output, preconditions and postconditions can
   be found in the documentation for each file.

FILE INDEX
   file             function(s)        description
   --------------   -----------------  ----------------------
   constants.h                         constant declarations
   
   main.cpp         main               calls all other functions

   average.cpp	    average	       returns the average of the array
   
   grade.cpp        grade	       returns the letter grade (char) of a
				       test score
				       
   median.cpp	    median	       returns the median of the array values
   
   outputScores.cpp outputScores       outputs score results to "testresults"
   
   outputSummary.cpp  outputSummary    outputs summary values to "testsummary"
   
   read.cpp         read               read data from the file "testscores"

   sort.cpp         sort               sorts the arrays in descending order
   
   stddev.cpp	    StdDev	       returns the standard deviation

   makefile                            builds executable

   README                              this file


PROGRAM TESTING
   This program was tested with different sets of data. You should be having
   a maximum test score and at least 1 name/score pair in your data file.

   Checked for a normal set of data partially filling the array
   
   Checked for having the output files "testresults" and "testsummary" already
   in existence before running the program
      - If this is the case, you may be prompted to overwrite your current files
      
   Checked for the number of values exceeding the array size

   It's possible to have empty or nan data if you have a data file with no data.
   You should be entering at least the maximum score and one name/score value 
   pair in your data file.

   There are no known bugs.  Any errors should be reported to:
   rudejo@mnstate.edu
